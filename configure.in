dnl  Process this file with autoconf to produce a configure script.
dnl  Copyright (C) 1998 John Harper <john@dcs.warwick.ac.uk>
dnl  $Id$
dnl
dnl  This file is part of Jade.
dnl
dnl  Jade is free software; you can redistribute it and/or modify it
dnl  under the terms of the GNU General Public License as published by
dnl  the Free Software Foundation; either version 2, or (at your option)
dnl  any later version.
dnl
dnl  Jade is distributed in the hope that it will be useful, but
dnl  WITHOUT ANY WARRANTY; without even the implied warranty of
dnl  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl  GNU General Public License for more details.
dnl
dnl  You should have received a copy of the GNU General Public License
dnl  along with Jade; see the file COPYING.  If not, write to
dnl  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.

AC_REVISION($Revision$)

AC_INIT(src/jade.h)
AC_CONFIG_HEADER(config.h)
AC_CONFIG_AUX_DIR(etc)

version="5.0"
version_major=5
version_minor=0

jadedir='${datadir}/jade'
lispdir='${jadedir}/${version}/lisp'
jadeexecdir='${libexecdir}/jade/${version}/${host_type}'

output_files="man/Makefile src/Makefile lisp/Makefile Makedefs Makefile"

opt_enable_dumped=0
dumped_lisp_files="lisp backquote tilde windows buffers modes edit prompt\
 completion help keymap replace isearch lisp-mode c-mode text-mode fill"

dnl Find the system type; this isn't crucial
AC_CANONICAL_HOST

dnl Remove trailing slash in $prefix if necessary
case "${prefix}" in
  */)
    prefix=`echo ${prefix} | sed -e 's/^\(.*\)\/$/\1/'`
    ;;
esac

dnl make sure we can find libraries and headers under $prefix
case "$prefix" in
  /|/usr|/usr/local|NONE)
    ;;
  *)
    LDFLAGS="${LDFLAGS} -L$prefix/lib"
    CPPFLAGS="${CPPFLAGS} -I$prefix/include"
    ;;
esac

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_GCC_TRADITIONAL

dnl Checks for libraries.
AC_CHECK_LIB(nsl, xdr_void)
AC_CHECK_LIB(socket, bind)

dnl Checks for header files.
AC_PATH_XTRA
AC_HEADER_STDC
AC_HEADER_TIME
AC_CHECK_HEADERS(fcntl.h sys/time.h sys/utsname.h unistd.h memory.h)

dnl Check for librep
AM_PATH_REP(0.11)

dnl Check for window-systems
windowsys=none
AC_SUBST(windowsys)

dnl Use GTK?
dnl use_gtk=no
dnl AC_ARG_ENABLE(gtk,
dnl  [  --enable-gtk		  Use GTK for windowing purposes (default)
dnl   --disable-gtk		  Use Xlib for windowing],
dnl  [use_gtk="$enableval"])
dnl if test "$use_gtk" = "yes"; then
dnl   AM_PATH_GTK(1.2.0,,AC_ERROR(need at least Gtk+ version 1.2))
dnl   windowsys="GTK"
dnl   HAVE_GTK=1
dnl   AC_DEFINE(HAVE_GTK)
dnl fi

dnl Use Mac OS X code?
use_mac=no
AC_ARG_ENABLE(mac,
 [  --enable-mac		  Use Mac OS X native window system
  --disable-mac		  Use Xlib for windowing],
 [use_mac="$enableval"])
if test "$use_mac" = "yes"; then
  windowsys="MAC"
  HAVE_MAC=1
  AC_DEFINE(HAVE_MAC)
  MAC_CFLAGS=
  MAC_LIBS="-framework AppKit -framework CoreText -framework Foundation -framework ApplicationServices -framework CoreFoundation"
  AC_SUBST(MAC_CFLAGS)
  AC_SUBST(MAC_LIBS)
  appsdir='${exec_prefix}/Applications'
  AC_SUBST(appsdir)
fi

dnl If X is available and nothing else has been chosen, use it
if test "${no_x}" != "yes"; then
  AC_DEFINE(HAVE_X11)
  if test "${windowsys}" = "none"; then
    windowsys="X11"
  fi
fi

if test "${windowsys}" = "none"; then
  AC_MSG_ERROR([You need to choose a window system to build Jade])
fi

if test "${windowsys}" = "X11"; then
  _cppflags="${CPPFLAGS}"
  CPPFLAGS="${CPPFLAGS} ${X_CFLAGS}"
  XFT_LIBS=""
  AC_SUBST(XFT_LIBS)
  AC_ARG_WITH(xft,
	      [ --with-xft            Try to use Xft for anti-aliased text], [],
	      [ with_xft=no ])
  if test "$with_xft" != "no"; then
    AC_CHECK_LIB(Xft, XftDrawCreate,
		 [XFT_LIBS="-lXft -lXrender"
		 AC_CHECK_HEADERS(X11/Xft/Xft.h)],
		 [], [$X_LIBS -lX11 -lXext])
  fi
  CPPFLAGS="${_cppflags}"
fi

dnl Check for Doug Lea's malloc in libc, otherwise compile dlmalloc.c
doug_lea_malloc=yes
AC_CHECK_FUNC(malloc_get_state, , doug_lea_malloc=no)
AC_CHECK_FUNC(malloc_set_state, , doug_lea_malloc=no)
if test "$doug_lea_malloc" = "no"; then
  dnl We used to compile our own version of dlmalloc on most
  dnl platforms that didn't have it in their libc. But the list
  dnl of exceptions was growing too long..
  AC_DEFINE(LIBC_MALLOC)
else
  AC_DEFINE(DOUG_LEA_MALLOC)
  AC_DEFINE(LIBC_MALLOC)
fi

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T

dnl Checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_MEMCMP
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(getcwd gethostname socket strcspn strstr strtol snprintf getpagesize)
AC_REPLACE_FUNCS(realpath)

dnl Custom tests

dnl FIXME: Currently only GNU CC can compile Jade (some uses of
dnl FIXME: nested functions to aid debugging and laziness)
if test "x${GCC}" != "xyes"; then
  AC_MSG_ERROR([You currently need GNU CC to compile Jade.
Send abusive email to john@dcs.warwick.ac.uk to get this fixed!]);
fi

dnl If using GCC and it doesn't look as though the cflags have been
dnl set explicitly, add some warning options. Turn off implicit-int
dnl warnings since the X11 includes on Solaris generate a lot of these
if test "x${GCC}" = "xyes" -a "x$CFLAGS" = "x-g -O2"; then
  CFLAGS="${CFLAGS} -Wall -Wmissing-prototypes -Wno-implicit-int"
fi

AC_ARG_ENABLE(dumped,
 [  --enable-dumped	  Dump LISP files into the jaded binary
  --disable-dumped	  Don't dump LISP files (default)],
 [if test "$enableval" != "no"; then opt_enable_dumped=1; fi])

dnl If making a jaded binary, add its Makefile to the list of outputs
dnl if test "${opt_enable_dumped}" = "1"; then
dnl   output_files="${output_files} jaded/Makefile:src/Makefile.in"
dnl fi

dnl Nonstandard exported symbols
AC_SUBST(version)
AC_SUBST(version_minor)
AC_SUBST(version_major)
AC_SUBST(rep_version)
AC_SUBST(jadedir)
AC_SUBST(jadeexecdir)
AC_SUBST(lispdir)
AC_SUBST(opt_enable_dumped)
AC_SUBST(dumped_lisp_files)
AC_SUBST(dump_flags)
AC_SUBST(HAVE_X11)
AC_SUBST(JADE_LIBOBJS)
AC_SUBST(CPPFLAGS)
AC_SUBST(CFLAGS)
AC_SUBST(LIBS)

dnl Build all files
AC_OUTPUT(${output_files})

dnl If it doesn't look like GNU Make is being used, give a friendly warning
tem=`make --version -f /dev/null 2>&1 | grep GNU`
if test "x$tem" = "x"; then
  AC_MSG_WARN([You need to use GNU Make when compiling Jade])
fi

dnl Local variables:
dnl major-mode: sh-mode
dnl End:
