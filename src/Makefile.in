# Makefile.in -- input for the src directory's Makefile
# Copyright (C) 1998 John Harper <john@dcs.warwick.ac.uk>
# $Id$
#
# This file is part of Jade.
#
# Jade is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# Jade is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Jade; see the file COPYING.  If not, write to
# the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.

version=@version@
SHELL=/bin/sh

prefix=@prefix@
exec_prefix=@exec_prefix@
datadir=@datadir@
top_srcdir=@top_srcdir@
srcdir=@srcdir@
bindir=@bindir@
includedir=@includedir@
infodir=@infodir@
libdir=@libdir@
libexecdir=@libexecdir@
localstatedir=@localstatedir@
mandir=@mandir@
sharedstatedir=@sharedstatedir@

jadedir=@jadedir@
lispdir=@lispdir@
dumped_lisp_files=@dumped_lisp_files@
enable_dumped=@opt_enable_dumped@

CC=@CC@
CPPFLAGS=@CPPFLAGS@
CFLAGS=$(CPPFLAGS) @CFLAGS@ @X_CFLAGS@
LDFLAGS=@LDFLAGS@
LIBS=@LIBOBJS@ @LIBS@
X11LIBS=@X_PRE_LIBS@ -lX11 @X_LIBS@ @X_EXTRA_LIBS@

HAVE_X11=@HAVE_X11@
HAVE_UNIX=@HAVE_UNIX@

VPATH=@top_srcdir@/src:@top_srcdir@/lib-src:../lib:.

# Check if we're building a dumped binary
ifeq ($(notdir $(shell pwd)), jaded)
  DUMPED_JADE = 1
else
  DUMPED_JADE = 0
endif

COMMON_SRCS =	buffers.c commands.c debug-buffer.c edit.c editcommands.c \
		files.c find.c glyphs.c housekeeping.c keys.c lisp.c \
		lispcmds.c lispmach.c main.c misc.c movement.c redisplay.c \
		regexp.c regjade.c regsub.c streams.c stringmem.c \
		symbols.c undo.c values.c views.c windows.c
COMMON_HDRS =	jade.h edit.h lisp.h value.h keys.h stringmem.h \
		revision.h regexp.h

X11_SRCS =	x11_keys.c x11_main.c x11_misc.c x11_windows.c
X11_HDRS =	x11_defs.h x11_windowsys.h

UNIX_SRCS =	lists.c unix_files.c unix_main.c unix_processes.c \
		unix_server.c
UNIX_HDRS =	unix_defs.h

SRCS = $(COMMON_SRCS)
HDRS = $(COMMON_HDRS)

ifneq ($(HAVE_X11), 0)
 SRCS += $(X11_SRCS)
 HDRS += $(X11_HDRS)
endif

ifneq ($(HAVE_UNIX), 0)
 SRCS += $(UNIX_SRCS)
 HDRS += $(UNIX_HDRS)
endif

OBJS = $(SRCS:.c=.o)

ifeq ($(DUMPED_JADE), 1)
 CFLAGS := $(CFLAGS) -DDUMPED
 DUMP_FLAGS := @dump_flags@
 DUMPED_IN  := $(dumped_lisp_files)
 DUMPED_SRC := $(addprefix $(lispdir)/, $(addsuffix .jl, $(DUMPED_IN)))
 DUMPED_CMP := $(DUMPED_SRC:.jl=.jlc)
 DUMPED_ASM := dumped.s
 DUMPED_OBJ := $(DUMPED_ASM:.s=.o)
 OBJS       += $(DUMPED_OBJ)
endif

ifneq ($(HAVE_X11), 0)
 JADE_LIBS = $(LIBS) $(X11LIBS)
else
 JADE_LIBS = $(LIBS)
endif
JADECLIENT_LIBS = $(LIBS)

.c.o :
	$(CC) -c $(CFLAGS) -DJADE -DJADE_DIR=$(jadedir) -I. -I../lib -I.. -o $@ $<

.PHONY: clean realclean

ifeq ($(DUMPED_JADE), 0)
all : jade jadeclient

jade : jade_protos.h doc-strings.h $(OBJS)
	$(CC) $(LDFLAGS) -o jade $(OBJS) $(JADE_LIBS)
else
all : jaded

jaded : jade_protos.h doc-strings.h $(OBJS)
	$(CC) $(LDFLAGS) -o jaded $(OBJS) $(JADE_LIBS)
endif

jadeclient : unix_client.o
	$(CC) $(LDFLAGS) -o $@ $^ $(JADECLIENT_LIBS)

ifeq ($(DUMPED_JADE), 1)
$(DUMPED_ASM) : $(DUMPED_CMP)
	../jade/jade -geometry +0+0 -log-msgs -f sleep-window \
	  -l dump -f dump-batch $(DUMP_FLAGS) -o $@ $(dumped_lisp_files) -q

$(DUMPED_CMP) : $(DUMPED_SRC)
	(cd $(top_srcdir)/lisp && $(MAKE) lisp)
endif

clean :
	rm -f *~ *.o build.h core

realclean : clean
	rm -f jade jaded jadeclient makedoc stripproto Makefile
ifeq ($(DUMPED_JADE), 1)
	rm -f dump.out dumped.s
endif

buffers.o	: $(HDRS)
commands.o	: $(HDRS)
debug-buffer.o	: $(HDRS)
edit.o		: $(HDRS)
editcommands.o	: $(HDRS)
find.o		: $(HDRS)
glyphs.o	: $(HDRS)
housekeeping.o	: $(HDRS)
io.o		: $(HDRS)
keys.o		: $(HDRS)
lisp.o		: $(HDRS)
lispcmds.o	: $(HDRS)
lispmach.o	: $(HDRS) bytecodes.h
main.o		: $(HDRS)
misc.o		: $(HDRS) build.h
movement.o	: $(HDRS)
redisplay.o	: $(HDRS)
streams.o	: $(HDRS)
stringmem.o	: $(HDRS)
symbols.o	: $(HDRS)
undo.o		: $(HDRS)
values.o	: $(HDRS)
views.o		: $(HDRS)
windows.o	: $(HDRS)

regerror.c	: $(HDRS) regprog.h regmagic.h
regexp.c	: $(HDRS) regprog.h regmagic.h
regsub.c	: $(HDRS) regprog.h regmagic.h
regjade.c	: $(HDRS) regprog.h regmagic.h

ifneq ($(HAVE_X11), 0)
 x11_keys.o	: $(HDRS)
 x11_main.o	: $(HDRS)
 x11_misc.o	: $(HDRS)
 x11_render.o	: $(HDRS)
 x11_windows.o	: $(HDRS)
endif

ifneq ($(HAVE_UNIX), 0)
 unix_main.o	: $(HDRS)
 unix_memory.o	: $(HDRS)
 unix_processes.o : $(HDRS)
 unix_server.o	: $(HDRS)
endif
